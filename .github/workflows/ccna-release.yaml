name: Run CCNA Parse and Update Releases

on:
  push:
    branches: [ main ]
    paths:
      - 'R/**'
      - 'formats/**'
      - 'ccna-library-parse.R'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # needed for creating / editing releases

    steps:
      # -----------------------------------------------------------
      # 1. checkout & set up R
      # -----------------------------------------------------------
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Install R packages
        run: |
          Rscript -e 'install.packages(c(
            "rvest","dplyr","fs","zip","writexl","stringr",
            "httr","jsonlite","readr","purrr","digest"
          ))'

      # -----------------------------------------------------------
      # 2. run the parser â€“ all console output captured
      # -----------------------------------------------------------
      - name: Run parsing script and capture output
        run: |
          mkdir -p output/zips
          Rscript R/scrpits/ccna-library-parse.R output/zips \
            | tee console_output.log           # â¬… keeps a copy for later

      # -----------------------------------------------------------
      # 3. create / update releases and upload artefacts
      # -----------------------------------------------------------
      - name: Create or update releases and upload files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # â”€â”€ collect unique release :contentReference[oaicite:1]{index=1}

            # all zip files that:contentReference[oaicite:2]{index=2}any URLs your script printe:contentReference[oaicite:3]{index=3} release n:contentReference[oaicite:4]{index=4}red CCNA exam data." \
              "Each exam is processed and packaged into multiple formats." \
              "For full details on each format and how to use them, see the [Formats Guide](./readme.md#available-formats)" \
              "" \
              "included urls:" \
              "$tag_links" > tmp_release_note.txt

            # â”€â”€ create or edit the release â”€â”€
            if gh release view "$tag" >/dev/null 2>&1; then
              echo "  â†» updating release $tag"
              gh release edit "$tag" --notes-file tmp_release_note.txt
            else
              echo "  âž• creating release $tag"
              gh release create "$tag" -t "$tag" --notes-file tmp_release_note.txt
            fi

            # â”€â”€ upload artefacts â”€â”€
            for f in $files; do
              echo "    ðŸ“¦ $(basename "$f")"
              gh release upload "$tag" "$f" --clobber
            done
          done
